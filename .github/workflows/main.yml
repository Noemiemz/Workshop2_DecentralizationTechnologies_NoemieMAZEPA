name: Deploy to IPFS via Pinata

on:
  push:
    branches:
      - main  # Trigger deployment on pushing to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository code
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up Node.js environment (required for Pinata SDK)
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Choose an appropriate Node version for your project

    # Install dependencies
    - name: Install dependencies
      run: npm install

    # Upload files to Pinata
    - name: Upload to Pinata
      run: |
        # Install Pinata SDK or Axios for uploading files via API
        npm install axios
        
        # Create a script to upload files
        echo "
        const axios = require('axios');
        const fs = require('fs');
        const path = require('path');

        const PINATA_API_KEY = process.env.PINATA_API_KEY;
        const PINATA_API_SECRET_KEY = process.env.PINATA_API_SECRET_KEY;

        const formData = new FormData();
        formData.append('file', fs.createReadStream(path.join(__dirname, 'main.html'))); // Path to your HTML file

        axios.post('https://api.pinata.cloud/pinning/pinFileToIPFS', formData, {
          headers: {
            'Content-Type': 'multipart/form-data',
            'pinata_api_key': PINATA_API_KEY,
            'pinata_secret_api_key': PINATA_API_SECRET_KEY,
          },
        }).then(response => {
          console.log('Uploaded to Pinata: ', response.data);
        }).catch(error => {
          console.error('Error uploading to Pinata: ', error);
        }
        " > upload.js

        node upload.js

      env:
        PINATA_API_KEY: ${{ secrets.PINATA_API_KEY }}
        PINATA_API_SECRET_KEY: ${{ secrets.PINATA_API_SECRET_KEY }}
